@namespace Shared
@using static Shared.TableRow
@rendermode InteractiveServer


<div class="date-choose-container">
    <SfButtonGroup>
        <ButtonGroupButton IconCss="e-icons e-chevron-left" CssClass="pagination-button">
        </ButtonGroupButton>
        <ButtonGroupButton IconCss="e-icons e-chevron-right" CssClass="pagination-button">
        </ButtonGroupButton>
    </SfButtonGroup>
    <SfDropDownList Width="200px" TValue="string" TItem="DropListItem" Placeholder="@_dateDropList[0].Text"
        DataSource="@_dateDropList" PopupHeight="500px" CssClass="e-date-list">
        <DropDownListFieldSettings Value="Text" Text="Text"></DropDownListFieldSettings>
    </SfDropDownList>
</div>
<ul>
    <div class="table-row table-header">
        <div class="header-cell user-header">User <span>96</span></div>
        <div class="header-cell last-active-header"> Last Active</div>
        <div class="header-cell date-header">2 <span>Mon</span></div>
        <div class="header-cell date-header">3 <span>Tue</span></div>
        <div class="header-cell date-header">4 <span>Wed</span></div>
        <div class="header-cell date-header">5 <span>Thu</span></div>
        <div class="header-cell date-header">6 <span>Fri</span></div>
        <div class="header-cell date-header">7 <span>Sat</span></div>
        <div class="header-cell date-header">8 <span>Sun</span></div>
        <div></div>
    </div>

    @{
        var currentUsers = _userInofs.Skip(SkipValue).Take(TakeValue).ToList();
        //Question: 为什么这里不能用private　
        List<Team> Teams = currentUsers
        .GroupBy(u => u.Team)
        .Select(g => new Team { TeamName = g.Key, Users = g.ToList() })
        .ToList();
        @foreach (var team in Teams)
        {
            <div class="table-row team-row">@team.TeamName TEAM</div>
            @foreach (var user in team.Users)
            {
                <TableRow UserData="user" />
            }
        }
    }
</ul>
<SfPager @ref="@Page" PageSize="5" PageSizes=@pagesizes NumericItemsCount=5 TotalItemsCount=@_userInofs.Count()
    ItemClick="Click">
</SfPager>

@code {
    private List<DropListItem> _dateDropList = new List<DropListItem> {
new DropListItem() { Id= "0", Text= "02-08 February 2024" },
new DropListItem() { Id= "1", Text= "09-15 February 2024" },
new DropListItem() { Id= "2", Text= "16-22 February 2024" }
};
    private List<UserInfo> _userInofs = new List<UserInfo>(){
new UserInfo(){Id="0",Name="Javier Holloway",LastActive="22/02/24", Team="MARKETING", Appointments=new
List<Appointment>(){
new Appointment(){Content="How to Overcome Procrastination", Date="03.02.2024", BeginnTime="14:00", EndTime="14:27",
Background="#EEF5FC", Color="#001360", Duration=1},
new Appointment(){Content="The 25-5 Rule",Date="05.02.2024", BeginnTime="14:00", Background="#FFEDD1", Color="#9B5E08",
Duration=2}
}},
new UserInfo(){Id="1",Name="Javier Holloway",LastActive="22/02/24", Team="MARKETING"},
new UserInfo(){Id="2",Name="Javier Holloway",LastActive="22/02/24", Team="MARKETING"},
new UserInfo(){Id="3",Name="Javier Holloway",LastActive="22/02/24", Team="MARKETING"},
new UserInfo(){Id="4",Name="Javier Holloway",LastActive="22/02/24", Team="MARKETING"},
new UserInfo(){Id="5",Name="Javier Holloway",LastActive="22/02/24", Team="MARKETING"},
new UserInfo(){Id="0",Name="Derek Larson 1",LastActive="12/02/24", Team="DEPARTMENT", Appointments=new
List<Appointment>(){
new Appointment(){Content="How to Overcome Procrastination", Date="03.02.2024", BeginnTime="14:00", EndTime="14:27",
Background="#EEF5FC", Color="#001360", Duration=2},
new Appointment(){Content="The 25-5 Rule", Date="05.02.2024", BeginnTime="14:00", Background="#FFEDD1", Color="#9B5E08",
Duration=1}
}
},
new UserInfo(){Id="0",Name="Derek Larson",LastActive="12/02/24", Team="DEPARTMENT"},
new UserInfo(){Id="0",Name="Derek Larson",LastActive="12/02/24", Team="DEPARTMENT"},
new UserInfo(){Id="0",Name="Derek Larson",LastActive="12/02/24", Team="DEPARTMENT"},
new UserInfo(){Id="0",Name="Derek Larson",LastActive="12/02/24", Team="DEPARTMENT"},
new UserInfo(){Id="0",Name="Derek Larson",LastActive="12/02/24", Team="DEPARTMENT"},
new UserInfo(){Id="0",Name="Derek Larson",LastActive="12/02/24", Team="DEPARTMENT"},
new UserInfo(){Id="0",Name="Derek Larson",LastActive="12/02/24", Team="DEPARTMENT"},
new UserInfo(){Id="0",Name="Derek Larson",LastActive="12/02/24", Team="DEPARTMENT"},
new UserInfo(){Id="0",Name="Derek Larson",LastActive="22/02/24", Team="DEPARTMENT"}
};

    SfPager? Page;
    public int SkipValue;
    public int TakeValue;
    public List<int> pagesizes = new List<int> { 5, 10, 12, 20 };
    //TO DO:也许可以加一个功能,选择pagesizes时, 刷新页面.即当pagesize改变的时候 ,rerender
    protected override void OnInitialized()
    {
        base.OnInitialized();
        TakeValue = pagesizes[0];
    }
    public void Click(PagerItemClickEventArgs args)
    {
        SkipValue = (args.CurrentPage * Page!.PageSize) - Page.PageSize;
        TakeValue = Page.PageSize;
    }

    public class Team
    {
        public required string TeamName { get; set; }
        public required List<UserInfo> Users { get; set; }
    }

}

<style>
    .table-row {
        background-color: white;
        display: flex;
        flex-direction: row;
    }

    .user-name {
        width: 190px;
    }

    .table-header {
        width: 1250px;
    }

    .header-cell {
        width: fit-content;
    }

    .date-header {
        width: 115px;
        height: 60px;
        border: 1px solid #DFDDDD;
        background-color: #F3F3F3;
        position: relative;
    }

    .user-header {
        width: 170px;
        border: 1px solid #DFDDDD;
    }

    .last-active-header {
        width: 110px;
        height: 60px;
        border: 1px solid #DFDDDD;
    }
</style>

@* 如果字的换行不完全一样.
重要吗? *@

@* SfPager Page; 感觉加?不好, requeired也不行 *@
