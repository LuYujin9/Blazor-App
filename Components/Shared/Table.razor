@using Global
@using static BlazorApp.Components.Shared.TableRow
@rendermode InteractiveServer

<div class="infos-container">
    <h3 class="inof-title">Acme Inc</h3>
    <div class="week-choose-container">
        <SfButtonGroup CssClass="week-change-btn-group">
            <ButtonGroupButton IconCss="e-icons e-chevron-left" @onclick="PrevWeekClick"
                CssClass="week-change-button prev-week-button">
            </ButtonGroupButton>
            <ButtonGroupButton IconCss="e-icons e-chevron-right" @onclick="NextWeekClick"
                CssClass="week-change-button next-week-button">
            </ButtonGroupButton>
        </SfButtonGroup>
        <SfDropDownList Width="200px" TValue="int" TItem="DateDropListItem" Placeholder="@_dateDropList[0].Text"
            DataSource="@_dateDropList" @bind-Value="@DateSkipValue" PopupHeight="500px" PopupWidth="250px"
            CssClass="week-change-list">
            <DropDownListFieldSettings Value="DateSkipValue" Text="Text"></DropDownListFieldSettings>
        </SfDropDownList>
    </div>
    <ul class="table-container">
        <li class="table-row table-header">
            <div class="header-cell header-user">User <span class="user-count-span">@_userInofs.Count()</span></div>
            <div class="header-cell header-last-active"> Last Active</div>
            @{
                var currentDate = _tableHeaderDates.Skip(DateSkipValue).Take(7).ToList();
                @foreach (var date in currentDate)
                {
                    <div class="header-cell header-date @(date.IsToday?"header-today":"")">@date.Date <span
                            class="day-span">@date.Day</span>
                    </div>
                }
            }
            <div class="header-cell header-empty"></div>
        </li>
        @{
            var currentUsers = _userInofs.Skip(SkipValue).Take(TakeValue).ToList();
            List<Team> Teams = currentUsers
            .GroupBy(u => u.Team)
            .Select(g => new Team { TeamName = g.Key, Users = g.ToList() })
            .ToList();
            @foreach (var team in Teams)
            {
                <li class="table-row team-row">@team.TeamName TEAM</li>
                @foreach (var user in team.Users)
                {
                    <TableRow UserData="user" />
                }
            }
        }
    </ul>
</div>

<div>

    <SfPager @ref="@Page" PageSize="5" PageSizes=@_pageSizes NumericItemsCount=5 TotalItemsCount=@_userInofs.Count()
        ItemClick="Click" CssClass="schedule-Table-Pager" ShowPagerMessage="false">@(SkipValue + 1) - @LastItemInThePage
        of
        @_userInofs.Count() items
    </SfPager>
</div>

@* question: error when ShowPagerMessage="false"; *@
