@using Global
@using static BlazorApp.Components.Shared.TableRow
@rendermode InteractiveServer

<div class="container">
    <div class="filter-sort-container">
        <SfDropDownList DataSource="@_filterDropList" @bind-Value="SelectedFilter" TValue="string" TItem="DropListItem"
            Width="auto" PopupHeight="500px" PopupWidth="250px" Placeholder="Filter by" CssClass="filter-sort">
            <DropDownListFieldSettings Value="Text" Text="Text"></DropDownListFieldSettings>
        </SfDropDownList>
        <SfDropDownList DataSource="@_sortDropList" @bind-Value="SelectedSort" TValue="string" TItem="DropListItem"
            Width="auto" PopupHeight="500px" PopupWidth="250px" Placeholder="Sort by" CssClass="filter-sort">
            <DropDownListFieldSettings Value="Text" Text="Text"></DropDownListFieldSettings>
        </SfDropDownList>
    </div>
    <div class="infos-container">
        <h3 class="inof-title">Acme Inc</h3>
        <div class="week-choose-container">
            <SfButtonGroup CssClass="week-change-btn-group">
                <ButtonGroupButton IconCss="e-icons e-chevron-left" @onclick="PrevWeekClick"
                    CssClass="week-change-button prev-week-button">
                </ButtonGroupButton>
                <ButtonGroupButton IconCss="e-icons e-chevron-right" @onclick="NextWeekClick"
                    CssClass="week-change-button next-week-button">
                </ButtonGroupButton>
            </SfButtonGroup>
            <SfDropDownList Width="200px" TValue="int" TItem="DateDropListItem" Placeholder="@_dateDropList[0].Text"
                DataSource="@_dateDropList" @bind-Value="@DateSkipValue" PopupHeight="500px" PopupWidth="250px"
                CssClass="week-change-list">
                <DropDownListFieldSettings Value="DateSkipValue" Text="Text"></DropDownListFieldSettings>
            </SfDropDownList>
        </div>
        <div class="table">
            <div class="table-header">
                @{
                    var currentUsers = _userInofs.Skip(SkipValue).Take(TakeValue).ToList();
                    List<Team> Teams = currentUsers
                    .GroupBy(u => u.Team)
                    .Select(g => new Team { TeamName = g.Key, Users = g.ToList() })
                    .ToList();
                    <TableLeftHeader TeamInfo="Teams" UserCount="currentUsers.Count()" />
                }
            </div>
            <div class="table-right">
                <div class="top-header">
                    @{
                        var currentDate = _tableHeaderDates.Skip(DateSkipValue).Take(7).ToList();
                        @foreach (var date in currentDate)
                        {
                            <div class=" header-date @(date.IsToday?"header-today":"")">@date.Date <span
                                    class="day-span">@date.Day</span>
                            </div>
                        }
                    }
                    <div class="header-cell header-empty"></div>
                </div>
                <div class="table-content">

                    @{
                        var currentUsers2 = _userInofs.Skip(SkipValue).Take(TakeValue).ToList();
                        List<Team> Teams2 = currentUsers2
                        .GroupBy(u => u.Team)
                        .Select(g => new Team { TeamName = g.Key, Users = g.ToList() })
                        .ToList();
                        @foreach (var team in Teams)
                        {
                            <li class="table-row team-leer-row"></li>
                            @foreach (var user in team.Users)
                            {
                                <TableRow UserData="user" />
                            }
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <SfPager @ref="@Page" PageSize="5" PageSizes=@_pageSizes NumericItemsCount=5 TotalItemsCount=@_userInofs.Count()
        ItemClick="Click" CssClass="schedule-Table-Pager" ShowPagerMessage="false">@(SkipValue + 1) -
        @LastItemInThePage
        of
        @_userInofs.Count() items
    </SfPager>

</div>

@* question: error when ShowPagerMessage="false"; *@
